---
# Cria um namespace para o projeto
apiVersion: v1
kind: Namespace
metadata:
  name: wp-projeto

---
# Cria um Deployment para o Wordpress com 3 réplicas
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wp-projeto
spec:
  replicas: 3
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      # Define o container do Wordpress
      containers:
      - name: wordpress
        image: wordpress:5.4-php7.2-apache
        envFrom:
        - secretRef:
            name: wordpress-env
        - configMapRef:
            name: wordpress-config
        volumeMounts:
        - name: wordpress-content
          mountPath: /var/www/html
          subPath: ""
      # Define o volume persistente para o conteúdo do Wordpress
      volumes:
      - name: wordpress-content
        persistentVolumeClaim:
          claimName: wordpress-content-pvc

---
# Cria um PersistentVolumeClaim para o Wordpress
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wordpress-content-pvc
  namespace: wp-projeto
spec:
  storageClassName: longhorn
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
# Cria um StatefulSet para o MySQL com 1 réplica
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: wp-projeto
spec:
  serviceName: "mysql"
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      # Define o container do MySQL
      containers:
      - name: mysql
        image: mysql:5.6
        envFrom:
        - secretRef:
            name: mysql-env
        - configMapRef:
            name: mysql-config
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
          subPath: ""
      # Define o volume persistente para o banco de dados MySQL
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-data-pvc

---
# Cria um PersistentVolumeClaim para o MySQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data-pvc
  namespace: wp-projeto
spec:
  storageClassName: longhorn
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# Cria um Secret para armazenar variáveis de ambiente sensíveis do Wordpress
apiVersion: v1
kind: Secret
metadata:
  name: wordpress-env
  namespace: wp-projeto
type: Opaque
data:
  WORDPRESS_DB_PASSWORD: eyJwYXNzd29yZCI6ImZvcmV2ZXJXaXRoUGFzc3dvcmQifQ==

---
# Cria um Secret para armazenar variáveis de ambiente sensíveis do MySQL
apiVersion: v1
kind: Secret
metadata:
  name: mysql-env
  namespace: wp-projeto
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: eyJwYXNzd29yZCI6ImZvcmV2ZXJXaXRoUGFzc3dvcmQifQ==
  MYSQL_PASSWORD: eyJwYXNzd29yZCI6ImZvcmV2ZXJXaXRoUGFzc3dvcmQifQ==

---
# Cria um ConfigMap para armazenar variáveis de configuração do Wordpress
apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-config
  namespace: wp-projeto
data:
  WORDPRESS_DB_USER: wordpress
  WORDPRESS_DB_NAME: wordpress
  WORDPRESS_DB_HOST: mysql.wp-projeto.svc.cluster.local

---
# Cria um ConfigMap para armazenar variáveis de configuração do MySQL
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: wp-projeto
